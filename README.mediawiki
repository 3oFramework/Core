*Declimer*
This project is still under pre-release development. 

You can use this at your own risk. Features may come and go without a warning

== This is Trio Framework ==

=== Why another Framework for PHP? ===
I have tried several PHP frameworks before, but, in my opinion, all fall
short in one important point: lack of versatility. You become a brainless zombie
to that one structure. That may be great for some projects and some development 
teams.
I just want complete control over everything. I want to control the URL structure
down to every single letter. I want to generate HTML tables with just a few 
lines of code. I want to forget about PHP "include"-ing every single class file
of one framework or worse: messing-up page loading times by including ALL 
framework files. Yet, I still want access to every part of the Framework Library.
This is the Trio Philosophy: Make IT simple.

=== Trio Components ===
The trio Script Framework consists of Two (may add more in the future) main 
components:
* The TriO Core
* The TriO Library

==== Trio Core ====
This is the part where you forget you program a website on top of a PHP framework.
It's somewhat inspired by Java because every file is a completely different 
program written in OOP fashion. All you have to do is to write a main() function 
for the main class (that has the same name as the file it's in) and the framework
will run it whenever you access the file in a web-browser.
You don't really have to know much about Object Oriented Programming to get 
started with simple learning projects.

==== Trio library ====
This is and will continue to be subject to active development.
While the Core was not much of a brainer, just a bunch of PHP techniques put
together, the Library is a lot more complex.
It's the reason this is called TriO Framework: One Object Oriented Framework.
The ultimate goal is to be able to write web applications using just PHP. No more
dozens of languages you have to learn just to make just one web page or even a 
self-programmed weblog. 
It's also the reason Trio Framework is does not have a version yet. Every single 
part is in development or in testing. There are some goals I want to reach before 
even considering labeling a version as "0.1".
First of all: adding JavaScript to the framework. CSS3 has come a long way and is
a great alternative to things formally only available in JavaScript. But you can't
build a rich Web Application without JS. I'm still trying to figure this out 
without forcing anyone to learn a completely new language as JavaScript.


=== Sources of inspiration ===
With Trio Framework, I don't want to invent any weal, I rather redesign it. So
here are some of the projects or concepts I get inspired from for this project:

; Java
The basis for this project was set some time ago when I learned Java after some
experience with PHP. Forcing an the potential Trio users into using
One Class per File originated from Java.
; LESS CSS
The CSS component of Trio isn't yet, but will probably be inspired by LESS.
It's a tool that really improves CSS
; jQuery
jQuery may be for JavaScript part what LESS I mentioned will be for CSS. 
I'm also looking at other JS Frameworks such as MooTools
; ezSQL
One great tool for database access. Trio MySQL is designed to be (almost) completely
compatible with ezSQL, but using MySQLi and different caching.
; Active Records
Even if complete Active Records implementation is not a goal, the database 
framework is a bit inspired by this concept.
